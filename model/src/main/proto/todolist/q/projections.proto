//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package spine.examples.todolist;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.examples.todolist";
option java_package = "io.spine.examples.todolist.q.projection";
option java_outer_classname = "ProjectionsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";


import "todolist/identifiers.proto";
import "todolist/attributes.proto";
import "todolist/values.proto";

// A projection state of created tasks.
//
// This view includes all tasks that are not in a draft state and not deleted.
//
// Sorting:
//
//     // incompleted on top; completed at bottom;
//     // by priority (HIGH, then NORMAL, then LOW);
//     // most recent on top.
//
message MyListView {

    TaskListId list_id = 1;

    TaskListView my_list = 2;
}

// Generic definition of a task list container.
//
message TaskListView {

    // A list of tasks.
    repeated TaskItem items = 1;
}

// Item of a task list view.
//
message TaskItem {

    // Task identifier.
    TaskId id = 1;

    // Task description.
    TaskDescription description = 2;

    // Task priority.
    TaskPriority priority = 3;

    // The due date for the task.
    google.protobuf.Timestamp due_date = 6;

    // Reserved for future extension.
    reserved 7 to 20;

    // Whether the task is completed.
    bool completed = 21;
}
