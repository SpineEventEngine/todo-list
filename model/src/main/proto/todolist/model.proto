//
// Copyright 2016, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

option (type_url_prefix) = "type.spine.examples.todolist";
option java_package = "org.spine3.examples.todolist";
option java_outer_classname = "ModelProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";

import "spine/annotations.proto";
import "spine/validate.proto";

import "todolist/identifiers.proto";

// Represents a single task.
//
message Task {

    // Task identifier.
    //
    TaskId id = 1;

    // A description of the task.
    //
    // Cannot be empty; must contain at least 3 alphanumeric symbols.
    //
    string description = 2 [(required) = true];

    // Task creation date.
    //
    google.protobuf.Timestamp created = 3 [(required) = true];

    // The due date for the task.
    //
    // Optional. Has no default value.
    //
    google.protobuf.Timestamp due_date = 4;
}

// Text label set to one or more tasks.
//
// Serves for grouping and filtering.
// Similar to Google Mail labels, can be color-coded.
//
message TaskLabel {

    // Label identifier.
    //
    TaskLabelId id = 1;

    // Label title.
    //
    // Cannot be empty.
    //
    string title = 2 [(required) = true];

    // Label color.
    //
    // Optional. Defaults to the `LabelColor.LC_UNDEFINED`.
    //
    LabelColor color = 3;
}

// Variety of choices used for `TaskLabel` coloring.
//
enum LabelColor {

    // Used as an undefined value marker.
    //
    LC_UNDEFINED = 0;

    RED = 1;

    GREEN = 2;

    BLUE = 3;

    GRAY = 4;
}

