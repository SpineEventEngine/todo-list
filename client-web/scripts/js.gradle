/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply from: "$projectDir/scripts/js-cli.gradle"

final def TASK_GROUP = 'JavaScript'

ext {
    npmPublicationRoot = "$buildDir/npm-publication/"
    bundleFile = "$projectDir/bundle.js"
}


/**
 * Installs the module dependencies using the `npm install` command.
 */
task installDependencies {
    group = TASK_GROUP
    description = 'Installs the JavaScript dependencies.'

    inputs.files "$projectDir/package.json"
    outputs.dir "$projectDir/node_modules"

    doLast {
        npm 'install'
    }
}

/**
 * Compiles the JS into the `client-all.js` artifact.
 *
 * <p>This task executes the NPM `compile` script, which uses Webpack to assemble the artifact.
 *
 * <p>This task is a part of a standard Gradle build for the `:js-client` project.
 */
task compileJs {
    group = TASK_GROUP
    description = 'Compiles the JavaScript sources into a single .js file.'

    inputs.files "$projectDir/webpack.config.js", fileTree("$projectDir/lib/")
    outputs.files bundleFile

    doLast {
        npm 'run', 'compile'
    }

    dependsOn installDependencies
}

task deleteCompiled(type: Delete) {
    group = TASK_GROUP

    delete compileJs.outputs.files
}

clean.dependsOn deleteCompiled

build.dependsOn compileJs
