/*
 * Copyright (c) 2000-2018 TeamDev Ltd. All rights reserved.
 * TeamDev PROPRIETARY and CONFIDENTIAL.
 * Use is subject to license terms.
 */

import org.apache.tools.ant.taskdefs.condition.Os

/**
 * Executes the given command depending on the current OS.
 *
 * @param workingDirArg  the directory to execute the command in
 * @param windowsCommand the command to execute is the OS is Windows
 * @param unixCommand    the command to execute is the OS is Unix-like
 * @param params         the command params, platform-independent
 */
def execMultiplatform(final File workingDirArg,
                      final String windowsCommand,
                      final String unixCommand,
                      final String[] params) {
    exec {
        final String command = Os.isFamily(Os.FAMILY_WINDOWS) ? windowsCommand : unixCommand
        final List resultingParams = [command] + Arrays.asList(params)
        workingDir = workingDirArg
        commandLine = resultingParams
    }
}

def runNpm(final File launchDir, final String[] params) {
    execMultiplatform launchDir, 'npm.cmd', 'npm', params
}

ext {

    /**
     * Executes an {@code npm} CLI command.
     *
     * For example, to execute command {@code npm run compile}, invoke this function as follows:
     * {@code npm 'run', 'compile'}
     *
     * @param params the command parameters
     */
    npm = { final File from = projectDir, final String... params ->
        runNpm(from, params)
    }
}
