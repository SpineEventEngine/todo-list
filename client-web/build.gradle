/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

ext {
    compiledProto = "$projectDir/proto"
    genProtoMain = "$compiledProto/main"
    genProtoTest = "$compiledProto/test"
}

apply from: "$projectDir/scripts/js.gradle"

dependencies {
    protobuf group: 'io.spine', name: 'spine-client', version: spineVersion, classifier: 'proto'
    protobuf project(':model')
}

task compileProtoToJs {
    description = "Compiles Protobuf sources into JavaScript."
}

protobuf {
    generatedFilesBaseDir = compiledProto
    protoc {
        artifact = deps.build.protoc
    }
    generateProtoTasks {
        all().each { final task ->
            task.builtins {
                // TODO:2018-05-14:dmytro.dashenkov: Disable `java` and `grpc` plugins.
                // TODO https://github.com/SpineEventEngine/todo-list/issues/62
                
                js {
                    option "import_style=commonjs"
                }

                task.generateDescriptorSet = true
                final def testClassifier = task.sourceSet.name == "test" ? "_test" : ""
                final def descriptorName = "${project.group}_${project.name}_${project.version}${testClassifier}.desc"
                task.descriptorSetOptions.path = "${projectDir}/build/descriptors/${task.sourceSet.name}/${descriptorName}"
            }
            compileProtoToJs.dependsOn task
        }
    }
}

apply plugin: 'io.spine.tools.proto-js-plugin'

protoJs {
    mainGenProtoDir = genProtoMain
    testGenProtoDir = genProtoTest

    generateParsersTask().dependsOn compileProtoToJs
    compileJs.dependsOn generateParsersTask()
}

project.compileJava.enabled = false
project.compileTestJava.enabled = false
