/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

buildscript {
    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:$deps.versions.shadowJar"
    }
}

apply plugin: "io.spine.tools.gradle.bootstrap"
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.spine.tools.spine-model-compiler'
//apply from: run.scripts.modelCompiler

spine.enableJava() {
    codegen {
        grpc = true
    }
    server()
}

dependencies {
    implementation (
        "com.google.cloud.sql:mysql-socket-factory:$deps.versions.cloudSqlSocketFactory",
        "com.zaxxer:HikariCP:$deps.versions.hikariCp",
        "io.spine:spine-rdbms:$deps.versions.spineJdbc",
        project(path: ':server')
    )

    // A Protobuf dependency to generate descriptor for Spine gRPC services.
    // This descriptor is required to configure gRPC services for a Google Cloud Endpoint.
    protobuf("io.spine:spine-client:$spineVersion") {
        exclude group: 'com.google.protobuf'
        exclude group: 'io.spine', module: 'spine-core'
    }
}

mainClassName = "io.spine.examples.todolist.server.ComputeCloudSqlServer"

// A task to build a `uber-jar`.
shadowJar {

    // Configuration of the artifact name. This name is used in `Dockerfile`.
    //
    // Remove the version from the name, because we can't update it automatically in `Dockerfile`.
    version = null
    classifier = null

    // Merge multiple property files with a same name into one file.
    //
    // Without merge, the resulting artifact will contain multiple property files
    // (all the files are located in the root of the archive),
    // which generated by Spine (e.g. `known_types.properties`).
    // In this case, only one `known_types.properties` file will be handled,
    // which will cause a wrong behavior.
    mergeServiceFiles {
        path = "*.properties"
    }
}

// Enable Protobuf descriptor generation.
// The descriptor is required to configure a Google Cloud Endpoint.
protobuf {
    generateProtoTasks {
        all().each { final task ->
            task.plugins {
                task.generateDescriptorSet = true

                // The extension `.desc` is not supported in the Endpoints configuration deployment.
                // One of the supported extensions is `.pb`.
                task.descriptorSetOptions.path = "$projectDir/build/descriptors/spine_grpc_services.pb"
            }
        }
    }
}
