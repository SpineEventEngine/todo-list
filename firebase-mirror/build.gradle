/*
 * Copyright 2017, TeamDev Ltd. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

dependencies {
    compile 'com.google.firebase:firebase-admin:5.5.0'

    testCompile project(path: ':api-java')
    testCompile ("io.spine:spine-testutil-server:$spineVersion") {
        exclude group: 'junit'
    }
    testCompile "com.google.guava:guava-testlib:$guavaVersion"
}

junitPlatform {
    filters {
        // Checks if the tests are run on a CI server, where the "CI" environmental variable is set
        // to "true".
        //
        // If the tests are NOT run on a CI server, the test cases labeled with the "CI" tag are
        // ignored. This mechanism allows to declare the tests which rely on some sensitive
        // environment, for example cloud service account credentials.
        //
        // To label a test with the "CI" tag, use `@Tag("CI")` annotation (from JUnit 5 API).
        //
        if (System.env.CI != "true") {
            tags {
                exclude "CI"
            }
        }
    }
}
