/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

buildscript { final scriptHandler ->
    apply from: "$rootDir/config/gradle/dependencies.gradle"
    apply from: 'version.gradle'

    defaultRepositories(scriptHandler)
    dependencies {
        classpath deps.build.guava
        classpath(deps.build.gradlePlugins.protobuf) {
            // exclude an old Guava version
            exclude group: 'com.google.guava'
        }
        classpath deps.build.gradlePlugins.protobuf
        classpath deps.build.gradlePlugins.errorProne
        classpath("org.gretty:gretty:$grettyVersion") {
            exclude group: 'commons-logging'
        }
        classpath "io.spine.tools:spine-model-compiler:$spineBaseVersion"
        classpath "io.spine.tools:spine-model-verifier:$spineVersion"
        classpath "io.spine.tools:spine-proto-js-plugin:$spineBaseVersion"
    }

    forceConfiguration(scriptHandler)
}

plugins {
    id 'io.spine.tools.gradle.bootstrap' version '0.15.5' apply false
    id 'net.ltgt.errorprone' version '0.8.1' apply false
}

allprojects {
    apply plugin: 'io.spine.tools.gradle.bootstrap'
    apply plugin: 'idea'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'

    spine.enableJava()
}

subprojects {
    dependencies {
        errorprone deps.build.errorProneCore
        errorproneJavac deps.build.errorProneJavac

        implementation deps.build.guava
        implementation deps.build.checkerAnnotations

        testImplementation group: 'io.spine', name: 'spine-testutil-server', version: spineVersion
        testRuntimeOnly deps.test.junit5Runner
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }
    
    apply from: deps.scripts.testOutput
    apply from: deps.scripts.javacArgs
    apply from: deps.scripts.pmd
}

ext {
    isTravis = System.env.TRAVIS == 'true'
}

if (isTravis) {
    // To limit the memory usage when running in Travis.
    // Travis tend to kill tasks that use too much memory.
    allprojects {
        tasks.withType(GroovyCompile) {
            groovyOptions.fork = false
        }
        tasks.withType(Test) {
            // containers (currently) have 2 dedicated cores and 4GB of memory
            maxParallelForks = 2
            minHeapSize = '128m'
        }
    }
    // Travis kills the test if it has seen no output for 10 minutes, so we need to produce output.
    test {
        testLogging {
            showStandardStreams = true
        }
    }
}

apply from: deps.scripts.jacoco
