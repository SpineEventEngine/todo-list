/*
 * Copyright 2021, TeamDev. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.examples.todolist;

import "spine/options.proto";

option (type_url_prefix) = "type.todolist.spine.io";
option java_package = "io.spine.examples.todolist.tasks.view";
option java_outer_classname = "ViewsProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";

import "todolist/identifiers.proto";
import "todolist/attributes.proto";
import "todolist/values.proto";

// The details of a single task.
//
message TaskView {
    option (entity).kind = PROJECTION;

    // Task identifier.
    TaskId id = 1;

    // Task description.
    TaskDescription description = 2;

    // Task priority.
    TaskPriority priority = 3;

    // The due date for the task.
    google.protobuf.Timestamp due_date = 4;

    // The IDs of the labels assigned to the task.
    LabelIdsList label_ids_list = 5;

    // Status of the task.
    TaskStatus status = 6;
}

// A single label view.
//
message LabelView {
    option (entity).kind = PROJECTION;

    // The ID of the label.
    LabelId id = 1;

    // The label title.
    string title = 2;

    // The label color.
    LabelColor color = 3;
}
