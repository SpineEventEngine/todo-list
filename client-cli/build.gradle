/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

ext {
    jlineVersion = '3.11.0'
}

spine.enableJava().client()

dependencies {
    implementation "org.jline:jline:$jlineVersion"

    implementation project(path: ':client')
    implementation project(path: ':cli-core')
    testImplementation project(path: ':testutil-cli')
    testImplementation project(path: ':testutil-api')
    testImplementation project(path: ':server')
}

// A task to run the client. See `ClientApp` for the details.
task runTodoClient(dependsOn: jar, type: JavaExec) {
    if(project.hasProperty('conf')){
        args(conf.split(','))
    }

    standardInput = System.in
    main = 'io.spine.examples.todolist.ClientApp'
    classpath = sourceSets.main.runtimeClasspath
}

// Do not run `client-cli` tests in parallel so instantiated server and client do not overlap with 
// their counterparts from the other thread.
if (isTravis) {
    tasks.withType(Test) {
        maxParallelForks = 1
    }
}
